plugins {
    id 'application'
    id 'org.jetbrains.kotlin.jvm' version '1.8.22'
    id 'com.exactpro.th2.gradle.component' version '0.0.8'
}

group 'com.exactpro.th2'
version release_version

kotlin {
    jvmToolchain(11)
}

repositories {
    mavenCentral()
    maven {
        name 'Sonatype_snapshots'
        url 'https://s01.oss.sonatype.org/content/repositories/snapshots/'
    }
    maven {
        name 'Sonatype_releases'
        url 'https://s01.oss.sonatype.org/content/repositories/releases/'
    }

    configurations.configureEach {
        resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
        resolutionStrategy.cacheDynamicVersionsFor 0, 'seconds'
    }
}

dependencies {
    api platform('com.fasterxml.jackson:jackson-bom:2.14.0')
    // https://mvnrepository.com/artifact/commons-cli/commons-cli
    implementation 'commons-cli:commons-cli'
    implementation 'commons-io:commons-io'

    implementation('com.exactpro.th2:pico-operator:1.5.2-dev') {
        exclude group: 'org.junit.jupiter'
        exclude group: 'org.junit'
        exclude group: 'com.squareup.okhttp3', module: 'okhttp'
        exclude group: 'com.squareup.okhttp3', module: 'logging-interceptor'
    }

    implementation "org.jetbrains.kotlin:kotlin-stdlib"
    implementation "org.jetbrains.kotlin:kotlin-reflect"
    implementation "io.github.microutils:kotlin-logging:3.0.5"

    implementation 'org.apache.logging.log4j:log4j-slf4j2-impl'
    implementation 'org.apache.logging.log4j:log4j-core'

    implementation("org.zeroturnaround:zt-exec:1.12") {
        because("Pico routs component output into separate log files")
    }

    implementation "com.fasterxml.jackson.core:jackson-core"
    implementation("com.fasterxml.jackson.core:jackson-databind")
    implementation("com.fasterxml.jackson.core:jackson-annotations")
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310"
    implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml"
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin"

    implementation "org.apache.commons:commons-text"

    testImplementation platform('org.junit:junit-bom:5.10.2')
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'

    testImplementation 'org.awaitility:awaitility-kotlin:4.2.0'
    testImplementation 'org.mockito.kotlin:mockito-kotlin:4.0.0'
}

configurations {
  runtime.exclude group: 'org.junit.jupiter'
  runtime.exclude group: 'org.junit'
}

application {
    applicationName = 'pico'
    mainClass.set("com.exactpro.th2.pico.PicoKt")
    applicationDefaultJvmArgs = ['-Dpico.operator.config=../cfg/config.yml']
}

distributions {
    main {
        contents {
            from('cfg') {
                into 'cfg'
            }
            from('scripts') {
                into 'bin'
            }

        }
    }
}

test {
    useJUnitPlatform()
}